#include<iostream>
using namespace std;
class node{
    int data;
    public:
    node* next;
    node(int d):data(d), next(NULL){}
};

class list{
    public:
    node* head;
    node* tail;

    list():head(NULL), tail(NULL){}
};

void push_front(int data){
    node* n=new node;
    if(head=NULL){
        head=tail=n;
    }
    n->next=NULL;
    head=head->next;
}

Node* Nodefromend(Node* head, int N) {
    Node* p1 = head;
    Node* p2 = head;

    for (int i = 0; i < N; i++) {
        if (p2 == NULL) {
            return NULL;
        }
        p2 = p2->next;
    }
 
    while (p2 != NULL) {
        p1 = p1->next;
        p2 = p2->next;
    }

    return p1;
}

int main(){
    list l;
    l.push_front(1);
    l.push_front(3);
    l.push_back(4);
    l.push_back(2);
    l.Nodefromend(head, 2);
    
    Node* result = Nodefromend(head, 2);
    
    return 0;
} 












